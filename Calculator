import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class CalculatorApp {
    public static void main(String[] args) {
        JFrame frame = new JFrame("Calculator");
        frame.setSize(400, 600);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setLayout(new BorderLayout());

        JTextField textField = new JTextField();
        textField.setFont(new Font("Arial", Font.BOLD, 24));
        textField.setHorizontalAlignment(JTextField.RIGHT);
        textField.setEditable(false);
        frame.add(textField, BorderLayout.NORTH);

        JPanel buttonPanel = new JPanel();
        buttonPanel.setLayout(new GridLayout(4, 4, 10, 10));
        frame.add(buttonPanel, BorderLayout.CENTER);

        String[] buttons = {
            "7", "8", "9", "+",
            "4", "5", "6", "-",
            "1", "2", "3", "*",
            "C", "0", "=", "/"
        };

        for (String text : buttons) {
            JButton button = new JButton(text);
            button.setFont(new Font("Arial", Font.BOLD, 20));
            button.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    String command = e.getActionCommand();
                    if (command.equals("C")) {
                        textField.setText("");
                    } else if (command.equals("=")) {
                        try {
                            String result = String.valueOf(eval(textField.getText()));
                            textField.setText(result);
                        } catch (Exception ex) {
                            textField.setText("Error");
                        }
                    } else {
                        textField.setText(textField.getText() + command);
                    }
                }
            });
            buttonPanel.add(button);
        }

        frame.setVisible(true);
    }

    public static double eval(String expression) {
        return new javax.script.ScriptEngineManager()
                .getEngineByName("JavaScript")
                .eval(expression) instanceof Double ?
                (double) new javax.script.ScriptEngineManager()
                        .getEngineByName("JavaScript")
                        .eval(expression) :
                (int) new javax.script.ScriptEngineManager()
                        .getEngineByName("JavaScript")
                        .eval(expression);
    }
}
